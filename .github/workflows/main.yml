name: CI

on: push

env:
  NEXT_TELEMETRY_DISABLED: 1 # https://nextjs.org/telemetry

jobs:
  Build:
    runs-on: ubuntu-18.04
    steps:

      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup

      - name: Build
        run: |
          yarn run build:all

      - uses: ./.github/actions/dist-upload

  Test:
    runs-on: ubuntu-18.04
    steps:

      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup

      - name: Build static files
        env:
          REACT_APP_TEST_USERNAME: ${{ secrets.REACT_APP_TEST_USERNAME }}
          REACT_APP_TEST_PASSWORD: ${{ secrets.REACT_APP_TEST_PASSWORD }}
          REACT_APP_TESTING: 1
        run: |
          export FIREBASE_DATABASE_EMULATOR_HOST="localhost:$(scripts/simple_jq.js ./packages/web/firebase.json .emulators.database.port)"
          export FIRESTORE_EMULATOR_HOST="localhost:$(scripts/simple_jq.js ./packages/web/firebase.json .emulators.firestore.port)"
          echo "firebase environment variables:" $FIREBASE_DATABASE_EMULATOR_HOST $FIRESTORE_EMULATOR_HOST
          yarn run build:all

      - name: Run tests
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }} # https://firebase.google.com/docs/cli#cli-ci-systems
          REACT_APP_TEST_USERNAME: ${{ secrets.REACT_APP_TEST_USERNAME }}
          REACT_APP_TEST_PASSWORD: ${{ secrets.REACT_APP_TEST_PASSWORD }}
        run: |
          yarn run firebase emulators:exec --only firestore "
            yarn run web start > /dev/null &
            yarn run test --coverage
          "

      - name: Upload coverage information to codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage/coverage-final.json
          fail_ci_if_error: ${{ github.ref != 'refs/heads/master' }} # Specify if CI pipeline should fail when Codecov runs into errors during upload. Defaults to false

  Lint:
    runs-on: ubuntu-18.04
    steps:

      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup

      - name: Lint
        run: yarn run lint .


  # TODO: Send Lighthouse result to commit/PR
  Lighthouse:
    runs-on: ubuntu-18.04
    needs: build
    steps:

      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup

      - uses: ./.github/actions/dist-download

      - name: Run lighthouse
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }} # Install this GitHub App and get the token: https://github.com/apps/lighthouse-ci
        run: yarn run lhci autorun

  # TODO: Send Netlify URL to commit/PR
  Netlify: # Development deployment
    runs-on: ubuntu-18.04
    needs: build
    steps:

      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup

      - uses: ./.github/actions/dist-download

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v1.1
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        with:
          publish-dir: './packages/web/dist'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions (SHA: ${{ github.sha }}; Ref: ${{github.ref }})"
          enable-commit-comment: false
          enable-pull-request-comment: true
          overwrites-pull-request-comment: true

  Changesets:
    runs-on: ubuntu-18.04
    needs: [Build, Test, Lint, Lighthouse, Netlify]
    if: github.ref == 'refs/heads/master'
    steps:

      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup

      - id: step_changesets
        name: Create release pull request or publish to npm
        uses: changesets/action@master
        with:
          publish: yarn run changeset publish
          commit: "chore(changesets): release a new version"
          title: "chore(changesets): release a new version"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Print outputs for debug
        run: |
          echo "changeset_outputs_published: [$changeset_outputs_published]"
        env:
          changeset_outputs_published: ${{ steps.step_changesets.outputs.published }}

    outputs:
      published: ${{ steps.step_changesets.outputs.published }}

  Firebase:
    runs-on: ubuntu-18.04
    needs: [Changesets]
    if: github.ref == 'refs/heads/master' && ( needs.Changesets.outputs.published == 'true' || contains(github.event.head_commit.message, 'force-publish') )
    steps:

      - uses: actions/checkout@v2

      - uses: ./.github/actions/setup

      - uses: ./.github/actions/dist-download

      - name: Deploy to Firebase
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: |
          yarn run web firebase deploy
